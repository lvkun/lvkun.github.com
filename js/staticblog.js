// Generated by CoffeeScript 1.11.1
(function() {
  var app, converter;

  converter = new Showdown.converter();

  app = angular.module('blog', ['ngSanitize']).config([
    '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
      $locationProvider.html5Mode(false).hashPrefix('!');
      return $routeProvider.when("", {
        templateUrl: "partials/index-list.html"
      }).when("/tag/:tag", {
        templateUrl: "partials/index-list.html"
      }).when("/resume", {
        templateUrl: "partials/resume.html"
      }).when("/post/:postPath", {
        templateUrl: "partials/post.html"
      });
    }
  ]).directive('ngMarkdown', function() {
    return function(scope, element, attrs) {
      return scope.$watch(attrs.ngMarkdown, function(value) {
        var el, html, j, len, ref;
        if (value != null) {
          html = converter.makeHtml(value);
          element.html(html);
          ref = document.body.querySelectorAll('pre code');
          for (j = 0, len = ref.length; j < len; j++) {
            el = ref[j];
            hljs.highlightBlock(el);
          }
          return MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
        }
      });
    };
  }).factory("indexService", function($http) {
    var indexService;
    indexService = {
      async: function() {
        var promise;
        promise = $http.get('post/index.json').then(function(response) {
          return response.data;
        });
        return promise;
      }
    };
    return indexService;
  });

  app.controller('HeaderCtrl', function($scope, $http, $location) {
    return $http.get("config.json").success(function(data) {
      var getState;
      getState = function(path) {
        var items;
        items = path.split("/");
        if (items.length > 1 && items[items.length - 1] === "resume") {
          return "Resume";
        }
        return "Blog";
      };
      $scope.state = getState($location.path());
      $scope.config = data;
      return $scope.$on("$locationChangeSuccess", function(event, newLoc, oldLoc) {
        return $scope.state = getState($location.path());
      });
    });
  });

  app.controller('IndexListCtrl', function($scope, $routeParams, indexService) {
    return indexService.async().then(function(data) {
      var buildTagList, tag;
      buildTagList = function(indexData) {
        var all_tags, j, k, len, len1, post, tag, tags;
        all_tags = [];
        for (j = 0, len = indexData.length; j < len; j++) {
          post = indexData[j];
          all_tags = all_tags.concat(post.tags);
        }
        tags = {};
        for (k = 0, len1 = all_tags.length; k < len1; k++) {
          tag = all_tags[k];
          if (tags[tag]) {
            tags[tag]["count"] += 1;
          } else {
            tags[tag] = {
              "text": tag,
              "href": "#!/tag/" + tag,
              "count": 1
            };
          }
        }
        tags["All"] = {
          "text": "All",
          "href": "#!/",
          "count": indexData.length
        };
        return tags;
      };
      $scope.indexList = data;
      indexService.indexData = data;
      $scope.tagList = buildTagList(data);
      if (($routeParams.tag != null) && $routeParams.tag.length !== 0) {
        tag = $routeParams.tag;
      } else {
        tag = "All";
      }
      $scope.currentTag = $scope.tagList[tag];
      if (tag === "All") {
        return $scope.currentTag.filter = "";
      } else {
        return $scope.currentTag.filter = tag;
      }
    });
  });

  app.controller('PostCtrl', function($scope, $http, $routeParams, indexService) {
    return $http.get("post/" + $routeParams.postPath + ".md").success(function(data) {
      $scope.postContent = data;
      return indexService.async().then(function(data) {
        var i, j, len, post, results;
        i = 0;
        results = [];
        for (j = 0, len = data.length; j < len; j++) {
          post = data[j];
          if (post.path === $routeParams.postPath) {
            $scope.prevPostPath = "";
            $scope.nextPostPath = "";
            if (data[i - 1] != null) {
              $scope.prevPostPath = "#!/post/" + data[i - 1].path;
            }
            if (data[i + 1] != null) {
              $scope.nextPostPath = "#!/post/" + data[i + 1].path;
            }
            break;
          }
          results.push(i++);
        }
        return results;
      });
    });
  });

  app.controller('ResumeCtrl', function($scope, $http) {
    return $http.get("resume.json").success(function(data) {
      return $scope.resume = data;
    });
  });

}).call(this);
